<div id="app">
  <div class="search-wrapper">
    <%= form_tag("/search", method: "get", class: "flexi-c r", id: "search") do %>
      <%= text_field_tag :search, params[:search], placeholder: "Search...", class: "flexi-i search-field" %>
      <input class="flexi-i search-submit" type="submit"></input>
    <% end %>
  </div>

  <template v-for="group in result">
    <h3 class="year-title">{{ group.collection }}</h3>

    <div class="cards">
      <div
        v-for="badge in group.badges"
        class="card"
        :class="{'card-gold': badge.wish}">

        <% if current_user %>
          <div class="card-star" :class="{'active': badge.wish}" @click.prevent="wish(badge)"></div>
        <% end %>

        <a
          :href="badge.link"
          class="card-image"
          :style="{
            background: 'url('+badge.image+') no-repeat center',
            backgroundSize: 'contain'
          }"></a>
        
        <a :href="badge.link" class="card-title">{{ badge.name }}</a>
      </div>
    </div>
  </template>
</div>

<script>
  var vivi = new Vue({
    el: "#app",
    data: {
      page: 1,
      fetching: false,
      result: <%= raw @badges.to_json %>
    },
    methods: {
      wish: function(badge) {
        var toggle = (badge.wish ? "/unwish" : "/wish")

        fetch("/badges/"+badge.id+toggle,{
          method: "POST",
          headers: {
            "X-CSRF-Token": "<%= form_authenticity_token.to_s %>"
          },
          credentials: "same-origin"
        })
        .then(function(res){  
          badge.wish = !badge.wish
        })
        .catch(function(res){ console.log(res) })
      },
      nextPage: function(){
        var data = this.$data
        this.fetching = true
        data.page ++

        fetch("/search.json?search=<%= params[:search] %>&page="+data.page, {
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": "<%= form_authenticity_token.to_s %>"
          },
          credentials: "same-origin"
        })
        .then(res=>res.json())
        .then(function(res){  
          res.forEach( e => {
            var last = data.result[data.result.length-1]

            if (e.collection == last.collection) {
              last.badges = last.badges.concat(e.badges)
            } else {
              data.result = data.result.concat(e)
            }
          })

          data.fetching = false
        })
        .catch(function(res){ console.log(res) })
      }
    },
    mounted() {
      window.addEventListener('scroll', () => {
        if(window.pageYOffset + window.innerHeight >= document.documentElement.scrollHeight - 80) {
          if (!this.$data.fetching) {
            this.nextPage()
          }
        }
      })
    }
  });
</script>
