<div id="app" class="flexi-c r">
  <div class="flexi-i side-bar">
    <div
      class="card"
      :class="{'card-gold': badge.wish}">
      
      <% if current_user %>
        <div class="card-star" :class="{'active': badge.wish}" @click.prevent="wish(badge)"></div>
      <% end %>

      <a
        :href="badge.link"
        class="card-image"
        :style="{
          background: 'url('+badge.image+') no-repeat center',
          backgroundSize: 'contain'
        }"></a>
      <a :href="badge.link" class="card-title">{{ badge.name }}</a>
      <div class="card-tag">
        <%= link_to @badge.collection.name, collection_path(@badge.collection_id) %>
      </div>
      <div class="card-tag">
        <span><%= @badge.year %></span>
      </div>
    </div>

    <% if current_user %>
      <p class="inventory">
        I have
        <input v-model="tmpInv" type="number" min="0" max="50" step="1"></input>
        of these
        <button v-if="tmpInv !== badge.inventory" @click="updateInventory(badge, tmpInv)">update</button>
      </p>
    <% end %>
  </div>

  <div class="flexi-i listing">
    <ul class="rows">
      <h3 class="year-title<%= @wishers.empty? ? ' cross' : '' %>">Wishers</h3>

      <% @wishers.each do |u| %>
        <li><%= link_to "#{u.username} (#{u.verified ? '' : 'un'}verified)", user_path(u) %></li>
      <% end %>
    </ul>

    <ul class="rows">
      <h3 class="year-title <%= @owners.empty? ? ' cross' : '' %>">Owners</h3>

      <% @owners.each do |u| %>
        <li><%= link_to "#{u.username} (#{u.verified ? '' : 'un'}verified) has #{u.inventories.find_by(badge_id: @badge.id)&.number || 0}", user_path(u) %></li>
      <% end %>
    </ul>
  </div>
</div>

<script>
  var vivi = new Vue({
    el: "#app",
    data: {
      badge: {
        id: <%= @badge.id %>,
        name: "<%= raw(@badge.name) %>",
        image: "<%= @badge.image.url %>",
        inventory: <%= @inventory %>,
        wish: <%= (current_user&.wish_items&.include? @badge) || false %>
      },
      tmpInv: <%= @inventory %>
    },
    methods: {
      wish: function(badge) {
        var toggle = (badge.wish ? "/unwish" : "/wish")

        fetch("/badges/"+badge.id+toggle,{
          method: "POST",
          headers: {
            "X-CSRF-Token": "<%= form_authenticity_token.to_s %>"
          },
          credentials: "same-origin"
        })
        .then(function(res){  
          badge.wish = !badge.wish
        })
        .catch(function(res){ console.log(res) })
      },
      updateInventory(badge, val) {
        fetch("/badges/"+badge.id+"/inventory",{
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-CSRF-Token": "<%= form_authenticity_token.to_s %>"
          },
          body: JSON.stringify({number: val}),
          credentials: "same-origin"
        })
        .then(function(res){  
          badge.inventory = val
        })
        .catch(function(res){ console.log(res) })
      }
    },
  });
</script>